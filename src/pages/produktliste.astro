---
//ts-nocheck

import { apiDetails } from "../settings";
import ProductCard from "../components/ProductsCard.astro";
import MainLayout from "../layouts/MainLayout.astro";
import { Image } from 'astro:assets';
import thumbsup from "../assets/images/thumbsup.png";

const res = await fetch(`${apiDetails.supabaseUrl}/rest/v1/products?select=*`, {
  headers: {
    apikey: apiDetails.supabaseAnonKey,
    Authorization: `Bearer ${apiDetails.supabaseAnonKey}`,
  },
});
const data = await res.json();
console.log("Supabase URL:", apiDetails.supabaseUrl);
console.log("Supabase anonKey:", apiDetails.supabaseAnonKey);

---

 <!--  <div class="flex flex-wrap md:gap-s md:m-xl  justify-evenly ">
  {data.map((product) => <ProductCard {product} /> )}
 -->

<MainLayout title="Afto font">
	<article id="hero" class="md:grid md:grid-cols-8 flex flex-col">
		<div class="col-start-3 col-span-4 border-2 border-[var(--purple-2)] bg-[var(--white)] p-10">
			<div class="flex justify-self-center items-center md:px-24 md:max-w-[100%]">
			</div>
			</div>
			<svg class="hidden md:grid col-start-7 place-self-start ml-4" width="75" height="111" viewBox="0 0 75 111" fill="none" xmlns="http://www.w3.org/2000/svg">
				<g clip-path="url(#clip0_3_27)">
				<path d="M74.93 55.44C69.06 52.38 59.81 46.61 51.82 36.64C39.97 21.86 37.92 6.61 37.46 0C36.84 6.87 34.45 21.85 22.77 36.49C14.92 46.34 5.91 52.22 0 55.44C1.81 56.34 3.97 57.5 6.33 58.97C11.51 62.34 17.6 67.2 23.1 74.06C34.95 88.84 37 104.09 37.45 110.7C37.45 110.69 37.45 110.67 37.45 110.66C37.45 110.73 37.45 110.81 37.46 110.88C37.46 110.77 37.46 110.64 37.46 110.52C38.1 103.57 40.55 88.73 52.14 74.2C59.21 65.34 67.2 59.71 73.03 56.32C73.7 56 74.34 55.7 74.92 55.44H74.93Z" fill="#2A122A"/>
				</g>
				<defs>
				<clipPath id="clip0_3_27">
				<rect width="74.93" height="110.88" fill="white"/>
				</clipPath>
				</defs>
				</svg>
	</article>
	<article>

<div class="product-page">
    <article class="product">
        <!-- Sticky section containing image gallery -->
        <div class="product-media i-sticky md:px-0 px-10">
            <div class="dummy--gallery grid grid-cols-2 grid-rows-3 justify-stretch h-[700px] lg:w-[450px] ml-2 mb-2">
                <p>hej</p>
            </div>
        </div>
      
        <div class="product-detail">
            <div class="flex flex-col h-80 bg-[var(--white)] ml-auto border-2 border-[var(--purple-2)] p-5">
                 <div class="flex flex-wrap md:gap-s justify-evenly ">
  {data.map((product) => <ProductCard {product} /> )}
            </div>
            <div class="flex flex-col justify-between h-80 bg-[var(--white)] ml-auto border-2 border-[var(--purple-2)] p-5">
                <div class="flex flex-row justify-end">
                    <p class=""><span class="text-[var(--text-color)]">Inspired by</span> <br> Groovy 70's <br> wallpaper <br><span class="text-[var(--text-color)]">and</span></p></div>
            
                <p class="">Mid <br>century <br>modern <span class="text-[var(--text-color)]">design</span></p>
            </div>
            <div class="ml-auto border-2 border-[var(--purple-2)]"><Image class="h-9xl" src={thumbsup} alt=""></Image></div>
            <div class="h-20 grid grid-cols-8"><div class="col-span-5 border-r-2  border-[var(--purple-2)] "></div></div>
            <div class="mr-auto ml-auto border-2 border-[var(--purple-2)]"><Image class="h-9xl" src={thumbsup} alt=""></Image></div>
            <div class="h-20 grid grid-cols-8"><div class="col-span-5 border-r-2  border-[var(--purple-2)] "></div></div>
            <div class="ml-auto border-2 border-[var(--purple-2)]"><Image class="h-9xl" src={thumbsup} alt=""></Image></div>
            <div class="h-60 grid grid-cols-8"><div class="col-span-5 border-r-2  border-[var(--purple-2)] "></div></div>
            <div class="hidden md:grid h-60 grid-cols-8"><div class="col-span-5 border-r-2  border-[var(--purple-2)] "></div></div>
            <!-- <div class="dummy">You May Need</div> -->
        </div>
    </article>
    <!-- <div class="dummy">More</div> -->
</div>
	</article>
</MainLayout>

<style>
	html, body {
    margin: 0;
    padding: 0;
    scroll-behavior: smooth;
}

* {
    box-sizing: border-box;
}

/** Dummy content **/
.dummy {
    text-align: center;
    padding: 1em 0;
    background: dodgerblue;
    color: white;
    margin: 16px 8px;
    border-radius: 4px;
    min-height: 80px;
}

.dummy__gallery-thumbs {
    display: flex;
    list-style: none;
    justify-content: space-between;
    padding: 0;
    background: transparent;
    min-height: 80px;
}

.dummy--gallery {
    background: #663399;
    background: rebeccapurple;
    min-height: 400px;
}

.product-detail .dummy {
    min-height: 240px;
}
.product-detail-2 .dummy {
    min-height: 240px;
}
.product {
    position: relative;
}

.product::after {
    display: table;
    width: 100%;
    height: 1px;
    content: '';
    clear: both;
}

@media screen and (min-width: 768px) {
    .product-media {
        float: left;
        width: 50%;
    }

    .product-detail {
        width: 50%;
        float: right;
    }
	.product-media-2 {
        float: left;
        width: 50%;
    }

    .product-detail-2 {
        width: 50%;
        float: right;
    }
}

@media screen and (min-width: 768px) {

    .is-sticky {
        position: fixed;
        top: 0;
    }

    .is-sticky-bottom {
        position: absolute;
        bottom: 0;
    }
}

@supports (position: sticky) or (position: -webkit-sticky) {
    @media screen and (min-width: 768px) {
        .product-media {
            position: -webkit-sticky;
            position: -moz-sticky;
            position: -o-sticky;
            position: -ms-sticky;
            position: sticky;
            top: 0;
        }
    }
}


</style>
<script>
	function supportsSticky() {
    try {
        return (
            CSS.supports("position", "sticky") ||
            CSS.supports("position", "-webkit-sticky")
        );

    } catch(e) {
        return false;
    }
}

function stickyStick(container, target) {

    var cPos = container.getBoundingClientRect();
    var tPos = target.getBoundingClientRect();
    var atBottom = (cPos.bottom  <= tPos.height);
    var isSticky = (cPos.top < 1 && ! atBottom);

    if(isSticky) {
        sticky.classList.add('is-sticky');
    } else {
        sticky.classList.remove('is-sticky');
    }

    if(atBottom) {
        sticky.classList.add('is-sticky-bottom');
    } else {
        sticky.classList.remove('is-sticky-bottom');
    }
}

if(! supportsSticky()) {
   var sticky = document.querySelector('.i-sticky');
    var container = sticky.parentNode;
 window.addEventListener('scroll',function() {
        stickyStick(container, sticky);
    });
}
</script>

